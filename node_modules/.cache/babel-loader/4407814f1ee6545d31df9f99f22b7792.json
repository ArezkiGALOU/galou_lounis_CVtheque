{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/kiki/myapp/src/SubmitComponent.js\";\nimport react, { Component } from 'react';\nimport axios, { post } from 'axios';\nimport ReactFileReader from 'react-file-reader';\nimport './App.css';\n\nclass SubmitComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.convertfile = file => {\n      return new Promise((resolve, rejected) => {\n        const fileReader = new FileReader();\n        fileReader.readAsDataURL(file);\n\n        fileReader.onload = () => {\n          resolve(fileReader.result);\n        };\n\n        fileReader.onerror = error => {\n          rejected(error);\n        };\n      });\n    };\n\n    this.state = {\n      file: null,\n      affich: \"\"\n    };\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.fileUpload = this.fileUpload.bind(this);\n  }\n\n  onFormSubmit(e) {\n    e.preventDefault(); // Stop form submit\n\n    this.fileUpload(this.state.file).then(response => {\n      const file = this.convertfile(response.data[0]);\n      console.log(file);\n      this.setState({\n        affich: file\n      });\n      console.log(\"contenu du state affich\\n\" + this.state.affich);\n    });\n  }\n\n  onChange(e) {\n    this.setState({\n      file: e.target.files[0]\n    });\n  }\n\n  fileUpload(file) {\n    const url = 'http://localhost:8080/api/CV/add';\n    const formData = new FormData();\n    formData.append('file', file);\n    const config = {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    };\n    return post(url, formData, config);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.onFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"File Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".pdf , .docx\",\n          onChange: this.onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n        src: this.state.affich,\n        frameBorder: \"0\",\n        height: \"600\",\n        width: \"50%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default SubmitComponent;","map":{"version":3,"sources":["/home/kiki/myapp/src/SubmitComponent.js"],"names":["react","Component","axios","post","ReactFileReader","SubmitComponent","constructor","props","convertfile","file","Promise","resolve","rejected","fileReader","FileReader","readAsDataURL","onload","result","onerror","error","state","affich","onFormSubmit","bind","onChange","fileUpload","e","preventDefault","then","response","data","console","log","setState","target","files","url","formData","FormData","append","config","headers","render"],"mappings":"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","sourcesContent":["import react, { Component } from 'react';\nimport axios, { post } from 'axios';\nimport ReactFileReader from 'react-file-reader';\nimport './App.css';\nclass SubmitComponent extends Component{\n\n  \n  constructor(props) {\n    super(props);\n    this.state ={\n      file:null,\n      affich: \"\"\n    }\n    this.onFormSubmit = this.onFormSubmit.bind(this)\n    this.onChange = this.onChange.bind(this)\n    this.fileUpload = this.fileUpload.bind(this)\n  }\n\n    convertfile = (file)=>{\n        return new Promise((resolve,rejected)=>{\n         const  fileReader= new FileReader();\n          fileReader.readAsDataURL(file);\n          fileReader.onload= ()=>{\n            resolve(fileReader.result);\n          };\n          fileReader.onerror=(error)=>{\n           rejected(error);\n          };\n        });\n     }\n\n\n\n  onFormSubmit(e){\n    e.preventDefault() // Stop form submit\n    this.fileUpload(this.state.file).then((response)=>{\n      const file =  this.convertfile(response.data[0]);\n      console.log(file);\n      this.setState({affich:file});\n      \n      console.log(\"contenu du state affich\\n\"+this.state.affich);\n    \n    })\n  }\n\n  onChange(e) {\n    this.setState({file:e.target.files[0]})\n  }\n\n  fileUpload(file){\n    const url = 'http://localhost:8080/api/CV/add';\n    const formData = new FormData();\n    formData.append('file',file)\n    const config = {\n        headers: {\n            'content-type': 'multipart/form-data'\n        }\n    }\n    return  post(url, formData,config)\n  }\n\n  render() {\n    return (\n      <div> \n      <form onSubmit={this.onFormSubmit}>\n        <h1>File Upload</h1>\n        <input type=\"file\" accept={\".pdf , .docx\" } onChange={this.onChange} />\n        <button type=\"submit\">Upload</button>\n      </form>\n      <iframe src={this.state.affich} frameBorder=\"0\" height=\"600\" width=\"50%\" />\n      </div>\n   )\n  }\n \n\n\n}\n\nexport default SubmitComponent;\n"]},"metadata":{},"sourceType":"module"}